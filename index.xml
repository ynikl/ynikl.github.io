<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Diver-Café</title><link>https://ynikl.github.io/</link><description>Recent content on Diver-Café</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 30 Apr 2022 17:22:23 +0800</lastBuildDate><atom:link href="https://ynikl.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Showyourwork</title><link>https://ynikl.github.io/books/showyourwork/</link><pubDate>Sat, 30 Apr 2022 17:22:23 +0800</pubDate><guid>https://ynikl.github.io/books/showyourwork/</guid><description>Show Your Work 读书总结 概括 - 我为什么要读这本书? 如何提高自己的影响力
- 这本书怎样影响了我? 打算开始分享计划, 学习如何分享, 讲述故事. 计划&amp;quot;学术假&amp;quot;
- 书中的三句精华句子?
You find time the same place you find spare change: in the nooks and crannies On the spectrum of creative work, the difference between the mediocre and the good is vast. Mediocrity is, however, still on the spectrum; you can move from mediocre to good in increments. The real gap is between doing nothing and doing something You can turn your flow into stock - 三句话总结本书</description></item><item><title>Channel</title><link>https://ynikl.github.io/go/channel/</link><pubDate>Sat, 02 Apr 2022 10:09:22 +0800</pubDate><guid>https://ynikl.github.io/go/channel/</guid><description>Go 中 channel 中用法和实现总结 以下分析和源码都是基于 go1.17 版本
channel 简介 Go 语言的基础类型之一, 用于在协程与协程之间传递数据 (channel 数据的传输方式也是值传递, Go语言的数据传输只有值传递)
Do not communicate by sharing memory; instead, share memory by communicating.
channel 保证:
数据的先入先出 并发情况下的数据安全 已经关闭的 channel 不可重开 channel 的实现 channel 在内部实现的结构体为 runtime.hchan
有一个环形链表, 暂存要传输的数据. 无 buffer 的channel 该队列长度为0, 所以不进行数据缓冲. 有一把互斥锁mutex, 在并发情况下, 保护自身数据结构的一致性 有两个协程等待链表, 用于挂载因为发送/接收而阻塞在该 channel 上的协程 type hchan struct { qcount uint // 当前 buffer 中有暂存着多少个数据 dataqsiz uint // 环形数据的buffer个数, 由 make 初始化的时候第二个参数容量决定的 buf unsafe.</description></item><item><title>提升文字留存率</title><link>https://ynikl.github.io/q/%E6%8F%90%E5%8D%87%E6%96%87%E5%AD%97%E7%95%99%E5%AD%98%E7%8E%87/</link><pubDate>Sat, 02 Apr 2022 09:58:23 +0800</pubDate><guid>https://ynikl.github.io/q/%E6%8F%90%E5%8D%87%E6%96%87%E5%AD%97%E7%95%99%E5%AD%98%E7%8E%87/</guid><description>如何提高自己的所编写的文字留存问题? 自己经常写了很多文字, 但是每当自己回顾的时候都不是很满意. 然后就会把已经写下的文字和内容删除掉.</description></item><item><title>2022</title><link>https://ynikl.github.io/okr/2022/</link><pubDate>Fri, 01 Apr 2022 20:09:37 +0800</pubDate><guid>https://ynikl.github.io/okr/2022/</guid><description>2022 年度目标 提升自己的基础技术竞争力, 确保不会找不到工作
精通 go 编程语言 精通 redis 精通 mysql 4 月份 OKR O:
加深对 Go 语言的基础知识理解 熟悉 redis 的所有数据类型 KR:
输出3篇高质量的 go 语言blog (channel, module, tools) 数据 redis 所有数据类型总结博文一篇</description></item><item><title>Tools</title><link>https://ynikl.github.io/go/tools/</link><pubDate>Fri, 01 Apr 2022 19:56:59 +0800</pubDate><guid>https://ynikl.github.io/go/tools/</guid><description>golang 工具链使用总结
go tool 使用go tool compile -N -l -S main.go生成汇编代码</description></item><item><title/><link>https://ynikl.github.io/about/</link><pubDate>Wed, 09 Mar 2022 15:24:02 +0800</pubDate><guid>https://ynikl.github.io/about/</guid><description>whoami: 潜水员
编程业余爱好者(五流程序员) 文字业余爱好者 计算机技能 Go Redis Mysql Operating System Algorithm (basic) 想学习的技能 摄影 Bucket List 逃离办公室 去西藏 写一本书</description></item><item><title>Hugo 文章分类管理</title><link>https://ynikl.github.io/tools/hugo-%E5%88%86%E7%B1%BB%E7%AE%A1%E7%90%86/</link><pubDate>Wed, 09 Mar 2022 11:29:17 +0800</pubDate><guid>https://ynikl.github.io/tools/hugo-%E5%88%86%E7%B1%BB%E7%AE%A1%E7%90%86/</guid><description>Hugo 文章分类管理 文件夹 内容存放在content/目录下方, content/下方的子目录会形成资源URI,
例如 content/blog/doc.md 文章访问目录即为 https//XXX.github.io/blog.doc.md
分类管理 文章内容表述 (Front Matter) 使用进行分类, 默认只有tags
tags: - Go - fast 可以在config添加自定的分类选项
taxonomies: series: series category: categories 文章路径 类别 描述 地址 home 网站homepage /index.html page 指定页面 /post/页面/index.html section 分区 /section/index.html taxonomy 分类 /tags/index.html term 分类系列 /tags/go/index.html _index.md 和 index.md 在文件夹下方添加_index.md会识别成section. 在文件夹下方添加index.</description></item></channel></rss>