<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>潜水员的咖啡小屋</title>
    <link>https://ynikl.github.io/</link>
    <description>Recent content on 潜水员的咖啡小屋</description>
    <image>
      <url>https://ynikl.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://ynikl.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 14 May 2022 21:06:07 +0800</lastBuildDate><atom:link href="https://ynikl.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>见识</title>
      <link>https://ynikl.github.io/books/%E8%A7%81%E8%AF%86/</link>
      <pubDate>Sat, 14 May 2022 21:06:07 +0800</pubDate>
      
      <guid>https://ynikl.github.io/books/%E8%A7%81%E8%AF%86/</guid>
      <description>见识:豆瓣地址
个人评分: 8.0 分
前辈用他的智慧和经验, 告诉我们如何更好地活着.
为什么读这本书  很多到了中年的人会有这样的体会： 自己无论多么努力，似乎都得不到社会的进一步认可；相反，如果按部就班地做事情，好像也坏不到哪里去。冥冥之中似乎被这两条线给框死，其实这就是命。
 为了这一句话, 读这一本书. 自己的作为一个普工程序员, 在技术浪潮的最后端被拖着走. 本根不需要到中年, 今年是我从事程序员工作的第四年, 我已经被感受到了被&amp;quot;命&amp;quot;限制住 的感觉了.
书中讲了什么 作者分享了他对商业, 技术, 职业, 创业, 金钱, 读书的观点和看法
用提出了商业的本质是&amp;quot;消费&amp;quot;的观点, 剖析了现在主流的&amp;quot;共享经济&amp;quot;, 带我们用商业的本质眼光, 去看哪些形式的共享经济是真正的&amp;quot;共享经济&amp;quot;, 哪些只是噱头炒概念的而已. 分析了IOT, 和数字跟踪技术, 区块链, 众筹等.
介绍了新科技公司的创业过程中的一些普世经验. 如何选取赛道, 如何发挥自己小公司的优势, 如何在科技浪潮中存活下来, 以及中如何招聘优秀员工.
关于在职场如何招聘到优秀的员工, 又可以引申到自己如何成为一个优秀的员工, 作者也给出了答案.
 树立完成的职业思维, 带着发展的目光选择岗位 在职业思维下主动和积极的面对工作 打开自己思维格局, 多去了解行业大局  有了不错的收入之后, 就涉及到了, 如何树立一个正确的金钱观. 要对自己收入有一个正确的认识, 避免过度追求提高收入, 进而牺牲了自己的健康, 家庭等. (现在经常听到我们的工友, 猝死就是这方面没有正确面对)
下半篇, 作者开始就上升到了人生态度问题. 以一个正确的心态, 面对生活, 面对婚姻, 面对死亡. 分清楚自己生活中的 &amp;ldquo;西瓜和芝麻&amp;rdquo;, 避免习惯于低层次的追求, 会影响我们的心志.
最后文中讲述对大学生的建议 (我已经错过了), 阐述沟通的重要性, 以及介绍了拉里·佩奇名人, 巴菲特的非凡&amp;quot;见识&amp;quot;.</description>
    </item>
    
    <item>
      <title>Showyourwork</title>
      <link>https://ynikl.github.io/books/showyourwork/</link>
      <pubDate>Sat, 30 Apr 2022 17:22:23 +0800</pubDate>
      
      <guid>https://ynikl.github.io/books/showyourwork/</guid>
      <description>Show Your Work 读书总结 概括 - 我为什么要读这本书? 如何提高自己的影响力
- 这本书怎样影响了我? 打算开始分享计划, 学习如何分享, 讲述故事. 计划&amp;quot;学术假&amp;quot;
- 书中的三句精华句子?
 You find time the same place you find spare change: in the nooks and crannies On the spectrum of creative work, the difference between the mediocre and the good is vast. Mediocrity is, however, still on the spectrum; you can move from mediocre to good in increments. The real gap is between doing nothing and doing something You can turn your flow into stock  - 三句话总结本书</description>
    </item>
    
    <item>
      <title>Channel</title>
      <link>https://ynikl.github.io/cs/go_channel/</link>
      <pubDate>Sat, 02 Apr 2022 10:09:22 +0800</pubDate>
      
      <guid>https://ynikl.github.io/cs/go_channel/</guid>
      <description>Go 中 channel 中用法和实现总结 以下分析和源码都是基于 go1.17 版本
channel 简介 Go 语言的基础类型之一, 用于在协程与协程之间传递数据 (channel 数据的传输方式也是值传递, Go语言的数据传输只有值传递)
 Do not communicate by sharing memory; instead, share memory by communicating.
 channel 保证:
 数据的先入先出 并发情况下的数据安全 已经关闭的 channel 不可重开  channel 的实现 channel 在内部实现的结构体为 runtime.hchan
 有一个环形链表, 暂存要传输的数据. 无 buffer 的channel 该队列长度为0, 所以不进行数据缓冲. 有一把互斥锁mutex, 在并发情况下, 保护自身数据结构的一致性 有两个协程等待链表, 用于挂载因为发送/接收而阻塞在该 channel 上的协程  1 2 3 4 5 6 7 8 9 10 11 12 13 14  type hchan struct { qcount uint // 当前 buffer 中有暂存着多少个数据 	dataqsiz uint // 环形数据的buffer个数, 由 make 初始化的时候第二个参数容量决定的 	buf unsafe.</description>
    </item>
    
    <item>
      <title>提升文字留存率</title>
      <link>https://ynikl.github.io/q/%E6%8F%90%E5%8D%87%E6%96%87%E5%AD%97%E7%95%99%E5%AD%98%E7%8E%87/</link>
      <pubDate>Sat, 02 Apr 2022 09:58:23 +0800</pubDate>
      
      <guid>https://ynikl.github.io/q/%E6%8F%90%E5%8D%87%E6%96%87%E5%AD%97%E7%95%99%E5%AD%98%E7%8E%87/</guid>
      <description>如何提高自己的所编写的文字留存问题? 自己经常写了很多文字, 但是每当自己回顾的时候都不是很满意. 然后就会把已经写下的文字和内容删除掉.</description>
    </item>
    
    <item>
      <title>2022</title>
      <link>https://ynikl.github.io/okr/2022/</link>
      <pubDate>Fri, 01 Apr 2022 20:09:37 +0800</pubDate>
      
      <guid>https://ynikl.github.io/okr/2022/</guid>
      <description>2022 年度目标 提升自己的基础技术竞争力, 确保不会找不到工作
 精通 go 编程语言 精通 redis 精通 mysql  5 月份 OKR O:
 加深对 Go 语言的基础知识理解 熟悉 redis 的所有数据类型  KR:
 输出3篇高质量的 go 语言blog  channel module tools   数据 redis 所有数据类型总结博文一篇   所有数据类型总结博文:    </description>
    </item>
    
    <item>
      <title></title>
      <link>https://ynikl.github.io/me/</link>
      <pubDate>Wed, 09 Mar 2022 15:24:02 +0800</pubDate>
      
      <guid>https://ynikl.github.io/me/</guid>
      <description>whoami: 潜水员
 编程业余爱好者(五流程序员) 文字业余爱好者  计算机技能  Go Redis Mysql Operating System Algorithm (basic)  想学习的技能  摄影  Bucket List  逃离办公室 去西藏 写一本书  </description>
    </item>
    
    <item>
      <title>Hugo 文章分类管理</title>
      <link>https://ynikl.github.io/tools/hugo-%E5%88%86%E7%B1%BB%E7%AE%A1%E7%90%86/</link>
      <pubDate>Wed, 09 Mar 2022 11:29:17 +0800</pubDate>
      
      <guid>https://ynikl.github.io/tools/hugo-%E5%88%86%E7%B1%BB%E7%AE%A1%E7%90%86/</guid>
      <description>Hugo 文章分类管理 文件夹 内容存放在content/目录下方, content/下方的子目录会形成资源URI,
例如 content/blog/doc.md 文章访问目录即为 https//XXX.github.io/blog.doc.md
分类管理  文章内容表述 (Front Matter) 使用进行分类, 默认只有tags
1 2 3  tags:- Go- fast  可以在config添加自定的分类选项
1 2 3  taxonomies:series:seriescategory:categories  文章路径    类别 描述 地址     home 网站homepage /index.html   page 指定页面 /post/页面/index.html   section 分区 /section/index.html   taxonomy 分类 /tags/index.html   term 分类系列 /tags/go/index.html    _index.md 和 index.</description>
    </item>
    
  </channel>
</rss>
