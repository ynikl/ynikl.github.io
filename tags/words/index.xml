<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>words on 潜水员的咖啡小屋</title>
    <link>https://ynikl.github.io/tags/words/</link>
    <description>Recent content in words on 潜水员的咖啡小屋</description>
    <image>
      <url>https://ynikl.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://ynikl.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>gilfoyle.k@outlook.com (潜水员)</managingEditor>
    <webMaster>gilfoyle.k@outlook.com (潜水员)</webMaster>
    <copyright>2022 Ian Lin All rights reserved</copyright>
    <lastBuildDate>Wed, 09 Nov 2022 14:04:07 +0800</lastBuildDate><atom:link href="https://ynikl.github.io/tags/words/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>20221109</title>
      <link>https://ynikl.github.io/notes/20221109/</link>
      <pubDate>Wed, 09 Nov 2022 14:04:07 +0800</pubDate>
      <author>gilfoyle.k@outlook.com (潜水员)</author>
      <guid>https://ynikl.github.io/notes/20221109/</guid>
      <description>吾本乘兴而行，兴尽而返，何必见戴
&amp;ndash; 世说新语·任诞
我本来是乘着一时高兴而来，现在兴尽就返回家，为什么非得见到戴逵呢？</description>
      <content:encoded><![CDATA[<blockquote>
<p>吾本乘兴而行，兴尽而返，何必见戴<br>
&ndash; 世说新语·任诞</p>
</blockquote>
<p>我本来是乘着一时高兴而来，现在兴尽就返回家，为什么非得见到戴逵呢？</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>20221109</title>
      <link>https://ynikl.github.io/notes/202212/</link>
      <pubDate>Wed, 09 Nov 2022 14:04:07 +0800</pubDate>
      <author>gilfoyle.k@outlook.com (潜水员)</author>
      <guid>https://ynikl.github.io/notes/202212/</guid>
      <description>5 代码整洁结构 内部不应该依赖外部, 业务逻辑的实现, 不应该依赖于框架
20 1917
Down to Gehenna or up to the Throne, He travels the fastest who travles alone
小狗钱钱
真正的勇敢是在感到最恐惧的时候, 你依然在往前走.
曹大博客
政府/企业对事故的管理一般有一套“事前-事中-事后”的分析框架，可以作为我们处理事故的很好的参考。在开始分析之前，要先简单了解一下这个框架： 所谓事前，就是做事情之前应该有统筹的规划，考虑可能出现的问题和困难，最好提前做实验验证下，以保证在真实现场不出问题，或者即使出现问题也有应对方案，不至于手忙脚乱、大动干戈。 所谓事中，就是做事情的过程中对事前规划的事情进行执行，以及记录过程中出现的问题；整个事中起着承前启后的作用，上对事前的规划进行验证，下对事后的总结反思进行铺垫。 所谓事后，就是做事情结束后对整个事情进行总结反思、问题分类和根因分析等。追踪并确认所有的问题有效进行了解决和应对，以确保下次不会再犯之前同样的错误。
22 工程师能力阶梯</description>
      <content:encoded><![CDATA[<h2 id="5">5</h2>
<h3 id="代码整洁结构httpswwwartacodecompostgolangtemplate"><a href="https://www.artacode.com/post/golang/template/">代码整洁结构</a></h3>
<p>内部不应该依赖外部, <strong>业务逻辑的实现, 不应该依赖于框架</strong></p>
<h2 id="20">20</h2>
<p>1917</p>
<blockquote>
<p>Down to Gehenna or up to the Throne, He travels the fastest who travles alone</p>
</blockquote>
<p>小狗钱钱</p>
<blockquote>
<p>真正的勇敢是在感到最恐惧的时候, 你依然在往前走.</p>
</blockquote>
<p>曹大博客</p>
<blockquote>
<p>政府/企业对事故的管理一般有一套“事前-事中-事后”的分析框架，可以作为我们处理事故的很好的参考。在开始分析之前，要先简单了解一下这个框架：
所谓事前，就是做事情之前应该有统筹的规划，考虑可能出现的问题和困难，最好提前做实验验证下，以保证在真实现场不出问题，或者即使出现问题也有应对方案，不至于手忙脚乱、大动干戈。
所谓事中，就是做事情的过程中对事前规划的事情进行执行，以及记录过程中出现的问题；整个事中起着承前启后的作用，上对事前的规划进行验证，下对事后的总结反思进行铺垫。
所谓事后，就是做事情结束后对整个事情进行总结反思、问题分类和根因分析等。追踪并确认所有的问题有效进行了解决和应对，以确保下次不会再犯之前同样的错误。</p>
</blockquote>
<h2 id="22">22</h2>
<p><a href="https://github.com/jorgef/engineeringladders">工程师能力阶梯</a></p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
