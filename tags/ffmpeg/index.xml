<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ffmpeg on 潜水员的咖啡小屋</title>
    <link>https://ynikl.github.io/tags/ffmpeg/</link>
    <description>Recent content in Ffmpeg on 潜水员的咖啡小屋</description>
    <image>
      <url>https://ynikl.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://ynikl.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>gilfoyle.k@outlook.com (潜水员)</managingEditor>
    <webMaster>gilfoyle.k@outlook.com (潜水员)</webMaster>
    <copyright>2022 Ian Lin All rights reserved</copyright>
    <lastBuildDate>Fri, 19 Aug 2022 00:14:54 +0800</lastBuildDate><atom:link href="https://ynikl.github.io/tags/ffmpeg/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FFmpeg 基本使用</title>
      <link>https://ynikl.github.io/blog/ffmpeg-basics/</link>
      <pubDate>Fri, 19 Aug 2022 00:14:54 +0800</pubDate>
      <author>gilfoyle.k@outlook.com (潜水员)</author>
      <guid>https://ynikl.github.io/blog/ffmpeg-basics/</guid>
      <description>最近接手公司一个视频相关项目, 也是使用ffmpeg工具. 需要快速了解下.
概念 码率, 帧率, 文件大小 帧率(frame rate) : 视频一秒中有多少帧画面(frames per second, fps), 决定视频流畅度.
interlaced: 古代黑白相机的交错扫描呈现, 描述单位i : 50i progressive: 现代整页整页呈现, 描述单位p: 60p 码率(bit rate) :视频一秒中有多少位, 决定视频的质量
ABR: 平均码率 CBR: 常量码率 VBR: 动态码率 文件大小 = 视频文件 + 音频文件
视频文件 = 码率 * 时间(s) / 8 音频文件 = 码率 * 时间(s) / 8
文件格式 不同的视频文件类型, 用户存储特定的数据流( 在 ffmpeg 中称为 containers) 可以存储声音或者视频数据.
相关缩写 encoding (E) decoding (D) video (V) audio (A) subtitles (S) 文件元数据 metadata 描述媒体文件自身的信息, 比如:</description>
      <content:encoded><![CDATA[<p>最近接手公司一个视频相关项目, 也是使用<code>ffmpeg</code>工具.  需要快速了解下.</p>
<h2 id="概念">概念</h2>
<h2 id="码率-帧率-文件大小">码率, 帧率, 文件大小</h2>
<p>帧率(frame rate) : 视频一秒中有多少帧画面(frames per second, fps), 决定视频流畅度.</p>
<ul>
<li>interlaced: 古代黑白相机的交错扫描呈现, 描述单位i : 50i</li>
<li>progressive: 现代整页整页呈现, 描述单位p: 60p</li>
</ul>
<p>码率(bit rate) :视频一秒中有多少位, 决定视频的质量</p>
<ul>
<li>ABR: 平均码率</li>
<li>CBR: 常量码率</li>
<li>VBR: 动态码率</li>
</ul>
<p>文件大小 = 视频文件 + 音频文件</p>
<p>视频文件 =  码率 * 时间(s) / 8
音频文件 =  码率 * 时间(s) / 8</p>
<h3 id="文件格式">文件格式</h3>
<p>不同的视频文件类型, 用户存储特定的数据流( 在 ffmpeg 中称为 containers)
可以存储声音或者视频数据.</p>
<h3 id="相关缩写">相关缩写</h3>
<ul>
<li>encoding (E)</li>
<li>decoding (D)</li>
<li>video (V)</li>
<li>audio (A)</li>
<li>subtitles (S)</li>
</ul>
<h3 id="文件元数据-metadata">文件元数据 metadata</h3>
<p>描述媒体文件自身的信息, 比如:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Metadata:
</span></span><span class="line"><span class="cl">	publisher : Ninja Tune
</span></span><span class="line"><span class="cl">	track : 1
</span></span><span class="line"><span class="cl">	album : Ninja Tuna
</span></span><span class="line"><span class="cl">	artist : Mr. Scruff
</span></span><span class="line"><span class="cl">	album_artist : Mr. Scruff
</span></span><span class="line"><span class="cl">	title : Kalimba
</span></span><span class="line"><span class="cl">	genre : Electronic
</span></span><span class="line"><span class="cl">	composer : A. Carthy and A. Kingslow
</span></span><span class="line"><span class="cl">	date : 2008
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="声音">声音</h3>
<p>数字音频是通过对声音的模拟信息, 抽样且用数据信号表示.</p>
<p>音频使用 bit depths 来表示声音的解析度:</p>
<p>8bit, 12bit, 14bit &hellip;</p>
<p>声音的样本频率用 Hz 表示</p>
<p>8000Hz, 11025Hz, 16000Hz &hellip;</p>
<h3 id="ffmpeg-其他套件">FFmpeg 其他套件</h3>
<ul>
<li>ffplay 播放器</li>
<li>ffprobe 查看媒体文件的信息</li>
<li>ffserver 流服务器</li>
</ul>
<h2 id="使用">使用</h2>
<h3 id="通用参数">通用参数</h3>
<p><code>-i</code> 输入源, 可以是文件也可以是 url</p>
<p><code>-vf</code> option for video filters
<code>-af</code> option for audio filters.</p>
<p><code>-filter_complex</code> 当多个输入源的时候使用</p>
<p><code>-y</code> 输出文件会强制覆盖已经存在的文件</p>
<h3 id="帮助">帮助</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&#34; 查看支持格式
</span></span><span class="line"><span class="cl">ffmpeg -formats
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&#34; 编解码器
</span></span><span class="line"><span class="cl">ffmpeg -codecs 
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="调整帧率">调整帧率</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ffmpeg -i input.avi -r 30 output.mp4
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="调整码率">调整码率</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ffmpeg -i input.avi -b:v 1500k output.mp4
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="缩放视频大小">缩放视频大小</h3>
<ul>
<li>s : w x h 参数 宽乘以高</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&#34; 缩小分辨率
</span></span><span class="line"><span class="cl">ffmpeg -i input.avi -s 640x480 output.avi
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&#34; 扩大分辨率
</span></span><span class="line"><span class="cl">ffmpeg -i input.mpg -vf scale=iw/PHI:ih/PHI output.mp4
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="旋转-翻转">旋转, 翻转</h3>
<p>旋转</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ffmpeg -i CMYK.avi -vf transpose=2 CMYK_transposed.avi
</span></span></code></pre></td></tr></table>
</div>
</div><p>竖直翻转</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ffmpeg -i meta.mp4 -vf vflip output_flip.mp4
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="裁切">裁切</h3>
<p>裁切视频的画中画, 裁切视频的中心 1/2 的视频</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ffmpeg -i input.avi -vf crop=iw/2:ih/2 output.avi
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="模糊化">模糊化</h3>
<p>模糊化</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ffmpeg -i input.mpg -vf boxblur=1.5:1 output.mp4
</span></span></code></pre></td></tr></table>
</div>
</div><p>锐化</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ffmpeg -i input -vf unsharp output.mp4
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="叠加">叠加</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ffmpeg -i input1 -i input2 -filter_complex overlay=x:y output
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="裁剪">裁剪</h3>
<p>获取一个时间段内的音频
<code>-t</code> 参数为秒</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ffmpeg -i input.mp4 -t 180 output_3_min.mp4
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>--ss</code> 设置开始时间点 ( seek from start, 从视频开始过多少秒开始操作)</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&#34; 直接截断开头3分钟
</span></span><span class="line"><span class="cl">ffmpeg -i input.mp4 -ss 180 output_without_start_3.mp4
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>截取某一段时间视频</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&#34; 截取第4分钟, 一分钟视频
</span></span><span class="line"><span class="cl">ffmpeg -i input.mp4 -ss 180 -t 60 clip_4th_min.mp4
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="图片操作">图片操作</h3>
<p>从视频中截取某一帧</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ffmpeg -i videoclip.avi -ss 01:23:45 image.jpg
</span></span></code></pre></td></tr></table>
</div>
</div><p>翻转图片</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ffmpeg -i orange.jpg -vf hflip orange_hflip.jpg
</span></span><span class="line"><span class="cl">ffmpeg -i orange.jpg -vf vflip orange_vflip.jpg
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&#34; transpose [0, 1, 2, 3]
</span></span><span class="line"><span class="cl">ffmpeg -i image.png -vf transpose=1 image_rotated.png
</span></span></code></pre></td></tr></table>
</div>
</div><p>转换图片格式</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ffmpeg -i illustration.png illustration.jpg
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="格式转化">格式转化</h3>
<p>格式转化流程:</p>
<p>Demuxer (分解复用) : 将合成信号恢复成原本独立的信号数据
Decoder (解码器) : 解码
Encoder (编码器) : 编码
Muxer ( _ ): 将多个信号数据合并</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ffmpeg -y -i input.avi output.mp4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&#34; 改变格式, 但不更改编解码方式
</span></span><span class="line"><span class="cl">ffmpeg -i input.avi -q 1 -c copy output.mov
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="混音">混音</h3>
<p>将两个声合成一个文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ffmpeg -i demo.mp3 -i louder_sound.aac -filter_complex amix=inputs=2 sounds.wav
</span></span></code></pre></td></tr></table>
</div>
</div><p>加强耳机的立体声效果</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ffmpeg -i music.mp3 -af earwax -q 1 music_headphones.mp3
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="参考">参考</h2>
<ul>
<li><em>FFmpeg Basics 2012 by Frantisek Korbel</em></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
